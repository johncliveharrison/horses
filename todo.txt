NEW

2019
find out how often the horse with lowest odds wins / second lowest etc.

run the correlation stuff again to the results

try using only one hidden layer witn len(input) + len(output) / 2 nodes

Can we use something other than feedforward (the other sort) for learning form?




###normalise the outputs for each horse (place-mean)/std-deviation##### -- see later point about normalisation
un-normalise the predicted output to find the placing (result*std-deviation)+mean

Try not limiting the training to only 20 races.
Or try limiting the races used to being between 5 and 10?

Try making the normalised output have range -1 to 1 instead of 0 to 1
Try using the gaussian normalisation on the output

Try training to one race first and then two and then three etc.
Try adding the last, last but one and last but two races to the inputs and then ignore the first three races...

Try adding the other horses average performance as input to the NN.  Have first second and third place horses as inputs.  Then in the
prediction phase put 0.5 in as all values (the results of the other horses should be normalised to fall in the range 0 to 1 where 0 is 
all first places.

check if any horse has won a race - don't be t on maiden races!

Extract class and use that as an input to the NN
Use a speed ratio from the last 4 races as an input.  Divide how much the horse was slow by, by the course record.  Add the 4 and divide by 4.

split the code into day, race, horse levels... 


DONE
calculate new mean and norm using the useful data
Removed the pastperformance mod stuff as it was just making the code look a mess
do a git commit to mark the end of the start of the introduction of the pybrain feature....
nomalise the output data using the formula (e-a)/(b-a).(d-c)+c where a and b are the old ranges and c,d are the desired ranges.
Stop using the traintoconvergence function as it uses some of the training data for validation.
activate the trained net on some test sets to see how accurate the training is.  If error greater than 5-10% then retrain...
Use the average speed instead of the position as the target in the net.
The jockey should be represented more by form, i.e. only consider the past 10 races
The trainer should be included as a field.  The form of the trainer is the last 10 race results for any horse trained by them.
extract the odds from the results so that profit and loss can also be calculated in the runTestDateRange
Make the jockey and trainer means and std-devs be based on races up to that date, not all races.
